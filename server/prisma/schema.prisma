generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuario {
  id                 Int         @id @default(autoincrement())
  correo_electronico String?     @unique @db.VarChar
  nombre             String?     @db.VarChar
  rut                String?     @unique @db.VarChar
  contrase_a         String?     @map("contrase√±a") @db.VarChar
  telefono           String?     @unique @db.VarChar
  rol                String?     @db.VarChar
  penalizado         String?     @db.VarChar
  registros          registros[]
  vehiculo           vehiculo[]
}

model estacionamiento {
  id                Int    @id @default(autoincrement())
  nombre            String @db.VarChar
  direccion         String @db.VarChar
  slots_totales     Int?
  slots_disponibles Int?
}

model slots {
  slot_id           Int       @id @default(autoincrement())
  slot_number       Int
  status            String    @db.VarChar(20)
  timestamp_entrada DateTime? @db.Timestamp(6)
  timestamp_salida  DateTime? @db.Timestamp(6)
}

model vehiculo {
  id          Int         @id @default(autoincrement())
  user_id     Int
  patente     String      @db.VarChar
  marca       String      @db.VarChar
  modelo      String      @db.VarChar
  color       String?     @db.VarChar
  esta_activo String      @default("si") @db.VarChar
  registros   registros[]
  usuario     usuario     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model registros {
  id            Int       @id @default(autoincrement())
  id_usuario    Int
  id_vehiculo   Int
  fecha_ingreso DateTime  @db.Timestamp(6)
  fecha_salida  DateTime? @db.Timestamp(6)
  usuario       usuario   @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehiculo      vehiculo  @relation(fields: [id_vehiculo], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
